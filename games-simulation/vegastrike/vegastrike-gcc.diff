diff -urN vegastrike-source-0.5.0.orig/boost/1_33/boost/mpl/apply.hpp vegastrike-source-0.5.0/boost/1_33/boost/mpl/apply.hpp
--- vegastrike-source-0.5.0.orig/boost/1_33/boost/mpl/apply.hpp	2010-06-19 00:39:55.871504363 +0200
+++ vegastrike-source-0.5.0/boost/1_33/boost/mpl/apply.hpp	2010-06-19 00:40:33.034001174 +0200
@@ -134,8 +134,10 @@
 #endif // BOOST_MPL_APPLY_HPP_INCLUDED
 
 ///// iteration, depth == 1
-
-#elif BOOST_PP_ITERATION_DEPTH() == 1
+// For gcc 4.4 compatability, we must include the
+// BOOST_PP_ITERATION_DEPTH test inside an #else clause.
+#else // BOOST_PP_IS_ITERATING
+#if BOOST_PP_ITERATION_DEPTH() == 1
 
 #   define i_ BOOST_PP_FRAME_ITERATION(1)
 
@@ -222,4 +224,5 @@
 
 #   undef i_
 
+#endif // BOOST_PP_ITERATION_DEPTH()
 #endif // BOOST_PP_IS_ITERATING
diff -urN vegastrike-source-0.5.0.orig/boost/1_33/boost/mpl/apply_wrap.hpp vegastrike-source-0.5.0/boost/1_33/boost/mpl/apply_wrap.hpp
--- vegastrike-source-0.5.0.orig/boost/1_33/boost/mpl/apply_wrap.hpp	2010-06-19 00:39:55.901504016 +0200
+++ vegastrike-source-0.5.0/boost/1_33/boost/mpl/apply_wrap.hpp	2010-06-19 00:40:33.034001174 +0200
@@ -78,7 +78,8 @@
 
 ///// iteration, depth == 1
 
-#elif BOOST_PP_ITERATION_DEPTH() == 1
+#else
+#if BOOST_PP_ITERATION_DEPTH() == 1
 
 #   define i_ BOOST_PP_FRAME_ITERATION(1)
 
@@ -197,4 +198,5 @@
 
 #   undef j_
 
+#endif
 #endif // BOOST_PP_IS_ITERATING
diff -urN vegastrike-source-0.5.0.orig/boost/1_33/boost/mpl/aux_/full_lambda.hpp vegastrike-source-0.5.0/boost/1_33/boost/mpl/aux_/full_lambda.hpp
--- vegastrike-source-0.5.0.orig/boost/1_33/boost/mpl/aux_/full_lambda.hpp	2010-06-19 00:39:55.778171895 +0200
+++ vegastrike-source-0.5.0/boost/1_33/boost/mpl/aux_/full_lambda.hpp	2010-06-19 00:40:33.070668466 +0200
@@ -227,7 +227,8 @@
 
 ///// iteration, depth == 1
 
-#elif BOOST_PP_ITERATION_DEPTH() == 1
+#else
+#if BOOST_PP_ITERATION_DEPTH() == 1
 #define i_ BOOST_PP_FRAME_ITERATION(1)
 
 #if i_ > 0
@@ -347,4 +348,5 @@
 };
 
 #undef i_
+#endif
 #endif // BOOST_PP_IS_ITERATING
diff -urN vegastrike-source-0.5.0.orig/boost/1_33/boost/mpl/aux_/numeric_op.hpp vegastrike-source-0.5.0/boost/1_33/boost/mpl/aux_/numeric_op.hpp
--- vegastrike-source-0.5.0.orig/boost/1_33/boost/mpl/aux_/numeric_op.hpp	2010-06-19 00:39:55.778171895 +0200
+++ vegastrike-source-0.5.0/boost/1_33/boost/mpl/aux_/numeric_op.hpp	2010-06-19 00:40:33.080682668 +0200
@@ -287,7 +287,8 @@
 
 ///// iteration, depth == 1
 
-#elif BOOST_PP_ITERATION_DEPTH() == 1
+#else
+#if BOOST_PP_ITERATION_DEPTH() == 1
 
 #   define i_ BOOST_PP_FRAME_ITERATION(1)
 
@@ -308,4 +309,5 @@
 
 #   undef i_
 
+#endif
 #endif // BOOST_PP_IS_ITERATING
diff -urN vegastrike-source-0.5.0.orig/boost/1_33/boost/mpl/bind.hpp vegastrike-source-0.5.0/boost/1_33/boost/mpl/bind.hpp
--- vegastrike-source-0.5.0.orig/boost/1_33/boost/mpl/bind.hpp	2010-06-19 00:39:55.771505724 +0200
+++ vegastrike-source-0.5.0/boost/1_33/boost/mpl/bind.hpp	2010-06-19 00:40:33.087341644 +0200
@@ -361,7 +361,8 @@
 
 ///// iteration, depth == 1
 
-#elif BOOST_PP_ITERATION_DEPTH() == 1
+#else
+#if BOOST_PP_ITERATION_DEPTH() == 1
 
 #   define i_ BOOST_PP_FRAME_ITERATION(1)
 
@@ -544,4 +545,5 @@
 #   endif
 #   undef j_
 
+#endif
 #endif // BOOST_PP_IS_ITERATING
diff -urN vegastrike-source-0.5.0.orig/objconv/basemaker/base_maker_texture.cpp vegastrike-source-0.5.0/objconv/basemaker/base_maker_texture.cpp
--- vegastrike-source-0.5.0.orig/objconv/basemaker/base_maker_texture.cpp	2010-06-19 00:39:54.804006242 +0200
+++ vegastrike-source-0.5.0/objconv/basemaker/base_maker_texture.cpp	2010-06-19 00:40:40.978166559 +0200
@@ -73,7 +73,7 @@
 		png_set_palette_to_rgb(png_ptr);
 
 	if (ctype == PNG_COLOR_TYPE_GRAY && data->bpp < 8)
-		png_set_gray_1_2_4_to_8(png_ptr);
+		png_set_expand_gray_1_2_4_to_8(png_ptr);
 
 	png_set_expand (png_ptr);
 	png_read_update_info (png_ptr,info_ptr);
@@ -211,7 +211,7 @@
 		unsigned char sig[8];
 		fread(sig, sizeof(char), 8, fp);
 		fseek(fp,0,SEEK_SET);
-		if (png_check_sig(sig, 8)) {
+		if (png_sig_cmp(sig, 0, 8)) {
 			return FORMAT_PNG;
 		}
 	}
diff -urN vegastrike-source-0.5.0.orig/src/cmd/basecomputer.cpp vegastrike-source-0.5.0/src/cmd/basecomputer.cpp
--- vegastrike-source-0.5.0.orig/src/cmd/basecomputer.cpp	2010-06-19 00:39:54.850672232 +0200
+++ vegastrike-source-0.5.0/src/cmd/basecomputer.cpp	2010-06-19 00:40:33.097334964 +0200
@@ -3142,7 +3142,7 @@
 	return s1.st_mtime - s2.st_mtime;
 }
 
-#if defined(_WIN32) && !defined(__CYGWIN__)
+#if (__GLIBC__>2 || __GLIBC_MINOR__>=10) || (defined(_WIN32) && !defined(CYGWIN)) 
 typedef int (*scancompare) ( const struct dirent **v1, const struct dirent **v2 );
 #else
 typedef int (*scancompare) ( const void *v1, const void *v2 );
diff -urN vegastrike-source-0.5.0.orig/src/gfx/vsimage.cpp vegastrike-source-0.5.0/src/gfx/vsimage.cpp
--- vegastrike-source-0.5.0.orig/src/gfx/vsimage.cpp	2010-06-19 00:39:54.940673220 +0200
+++ vegastrike-source-0.5.0/src/gfx/vsimage.cpp	2010-06-19 00:40:40.978166559 +0200
@@ -147,7 +147,7 @@
 	unsigned char sig[8];
 	file->Begin();
 	file->Read(sig, 8);
-	if (!png_check_sig(sig, 8))
+	if (!(png_sig_cmp(sig, 0, 8)==0))
 		ret = BadFormat;
 	
 	return ret;
@@ -349,7 +349,7 @@
 		png_set_palette_to_rgb(png_ptr);
 		   
 	if (this->img_color_type == PNG_COLOR_TYPE_GRAY && this->img_depth < 8)
-		png_set_gray_1_2_4_to_8(png_ptr);
+		png_set_expand_gray_1_2_4_to_8(png_ptr);
 
 	png_set_expand (png_ptr);
 	png_read_update_info (png_ptr,info_ptr);
diff -urN vegastrike-source-0.5.0.orig/src/vsfilesystem.h vegastrike-source-0.5.0/src/vsfilesystem.h
--- vegastrike-source-0.5.0.orig/src/vsfilesystem.h	2010-06-19 00:39:54.817340330 +0200
+++ vegastrike-source-0.5.0/src/vsfilesystem.h	2010-06-19 00:41:06.867329987 +0200
@@ -294,7 +294,7 @@
 			VSFile();
 			VSFile( const char * buffer, long size, VSFileType type=ZoneBuffer, VSFileMode=ReadOnly);
 			VSFile( const char * filename, VSFileType type=UnknownFile, VSFileMode=ReadOnly);
-			VSFile( const string &filename, VSFileType type=UnknownFile) { VSFile::VSFile( filename.c_str(), type); }
+			VSFile( const string &filename, VSFileType type=UnknownFile) { VSFile( filename.c_str(), type); }
   			~VSFile();
 
 			FILE *	GetFP() { return this->fp; } // This is still needed for special cases (when loading PNG files)
