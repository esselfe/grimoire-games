From: Jan Dittberner <jandd@debian.org>
Subject: Patch for FTBFS with g++ 4.6.0
Bug-Debian: http://bugs.debian.org/625097
Bug: http://springrts.com/mantis/view.php?id=2415
--- a/AI/Skirmish/E323AI/AAStar.h
+++ b/AI/Skirmish/E323AI/AAStar.h
@@ -4,6 +4,7 @@
 #include <queue>
 #include <vector>
 #include <list>
+#include <cstddef> // for NULL
 
 class AAStar {
 	public:
--- a/rts/Rendering/ShadowHandler.cpp
+++ b/rts/Rendering/ShadowHandler.cpp
@@ -318,6 +318,11 @@
 	xmid = 1.0f - (sqrt(fabs(x2)) / (sqrt(fabs(x2)) + sqrt(fabs(x1))));
 	ymid = 1.0f - (sqrt(fabs(y2)) / (sqrt(fabs(y2)) + sqrt(fabs(y1))));
 
+	shadowParams.x = xmid;
+	shadowParams.y = ymid;
+	shadowParams.z = p17;
+	shadowParams.w = p18;
+
 	shadowMatrix[ 0] =   cross1.x / maxLengthX;
 	shadowMatrix[ 4] =   cross1.y / maxLengthX;
 	shadowMatrix[ 8] =   cross1.z / maxLengthX;
--- a/rts/Rendering/ShadowHandler.h
+++ b/rts/Rendering/ShadowHandler.h
@@ -38,7 +38,7 @@
 	CMatrix44f shadowMatrix;
 	void CalcMinMaxView(void);
 
-	const float4 GetShadowParams() const { return float4(xmid, ymid, p17, p18); }
+	const float4& GetShadowParams() const { return shadowParams; }
 
 	enum ShadowGenProgram {
 		SHADOWGEN_PROGRAM_MODEL      = 0,
@@ -76,6 +76,7 @@
 	//! to write the (FBO) depth-buffer texture
 	std::vector<Shader::IProgramObject*> shadowGenProgs;
 
+	float4 shadowParams;
 	float x1, x2, y1, y2;
 	float xmid, ymid;
 	float p17, p18;
--- a/rts/Rendering/GLContext.cpp
+++ b/rts/Rendering/GLContext.cpp
@@ -9,6 +9,7 @@
 #include "GLContext.h"
 
 #include <list>
+#include <cstddef>  // for NULL
 
 
 using namespace std;
--- a/rts/System/MemPool.h
+++ b/rts/System/MemPool.h
@@ -4,6 +4,7 @@
 #define _MEM_POOL_H_
 
 #include <new>
+#include <cstddef> // for NULL
 
 const size_t MAX_MEM_SIZE=200;
 

